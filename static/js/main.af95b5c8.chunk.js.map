{"version":3,"sources":["images/Lima.jpg","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/components/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/EditPlace.js","user/pages/Auth.js","App.js","index.js"],"names":["module","exports","Avatar","props","className","style","src","busfoto","alt","width","height","Card","children","UserItem","to","id","image","name","placeCount","UsersList","items","length","map","user","key","name1","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","setError","isLoading","setIsLoading","activatedHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","console","log","useEffect","forEach","ControlAbort","abort","clearError","i","Users","savedUsers","setSavedUsers","process","users","sendingRequest","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isClicked","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","clickHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","FormularioReducer","formIsValid","inputID","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","login","logout","NewPlace","auth","useContext","title","description","address","busrespect","inputHandler","oldhistory","useHistory","placeSubmitHandler","JSON","stringify","creator","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawer","Map","mapRef","center","zoom","window","google","maps","Marker","position","ref","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","coordinates","PlaceList","bus_stops","creatorId","location","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","EditPlace","placeId","history","setFormData","bus_stop","fetchPlace","placeUpdateSubmitHandler","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","App","routes","setUserId","setIsLoggedIn","uid","path","Provider","render"],"mappings":"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","file":"static/js/main.af95b5c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lima.91c69979.jpg\";","import React from 'react';\r\nimport busfoto from '../../../images/Lima.jpg'\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={busfoto}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from \"../../shared/components/UIElements/Card\"\r\nimport './UserItem.css';\r\nconst UserItem = props => {\r\n\treturn (\r\n\t\t<li className='user-item'>\r\n\t\t\t<Card className='user-item__content'>\r\n\t\t\t\t<Link to={`/${props.id}/places`}>\r\n\t\t\t\t\t<div className='user-item__image'>\r\n\t\t\t\t\t\t<Avatar image={props.image} alt={props.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='user-item__info'>\r\n\t\t\t\t\t\t<h2> {props.name}</h2>\r\n\t\t\t\t\t\t<h3> {props.placeCount} {props.placeCount === 1 ? 'Place': \"Places\"}</h3>\r\n\t\t\t\t\t</div>\t\t\r\n\t\t\t\t</Link>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};   \r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nconst UsersList = props => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t<div className=\"center\">\r\n\t\t\t<Card>\r\n\t\t\t<h2> No Users Found.</h2>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t  <ul className='users-list'> \r\n\t\t{props.items.map(user => (\r\n\t\t\t<UserItem \r\n\t\t\tkey={user.id}\r\n\t\t\tid={user.id}\r\n\t\t\timage={'https://freewalkingtoursperu.com/wp-content/uploads/2021/12/tour-lima-vieja-con-metro-bus-metropolitano-2.jpg'}\r\n\t\t\tname={user.name1}\r\n\t\t\tplaceCount={user.places.length}\r\n\t\t\t/>\r\n\t\t))}\r\n\t  </ul>\r\n\t);\r\n};   \r\n\r\nexport default UsersList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content =(\r\n        <div className={`modal ${props.className}`} style = {props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form  \r\n            onSubmit={\r\n                props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n            }\r\n            >\r\n            <div className={`modal__content ${props.contentClass}`}>\r\n                {props.children}\r\n            </div>\r\n            <footer className={`modal__content ${props.footerClass}`}>\r\n                {props.footer}\r\n            </footer>\r\n            </form>\r\n        </div>\r\n        );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n    <React.Fragment>\r\n        {props.show && <Backdrop onClick={props.onCancel} />}\r\n        <CSSTransition in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n        >\r\n          <ModalOverlay {...props}/>  \r\n        </CSSTransition>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [error, setError] =useState()\r\n    const [isLoading, setIsLoading] =useState(false);\r\n    \r\n    const activatedHttpRequest = useRef([])\r\n\r\n\r\n    const sendRequest =useCallback( async (url, method = 'GET', body =null, headers={}) => {\r\n        setIsLoading(true); \r\n        const httpAbortController= new AbortController();\r\n        activatedHttpRequest.current.push(httpAbortController);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal\r\n            })\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activatedHttpRequest.current= activatedHttpRequest.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortController);\r\n        \r\n    \r\n            if(!response.ok) {\r\n                throw new Error (responseData.message)\r\n            }\r\n\r\n            setIsLoading(false)\r\n            return responseData;\r\n\r\n        } catch (err){\r\n            console.log(err)\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => { activatedHttpRequest.current.forEach(ControlAbort => ControlAbort.abort());}\r\n    } , []);\r\n\r\n    return {isLoading, error, sendRequest, clearError}\r\n\r\n};","\r\nimport React, {useState, useEffect} from 'react';\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n\tconst {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\tconst [savedUsers, setSavedUsers]= useState(false)\r\n\t\r\n\tuseEffect(() => {\r\n\t  const sendingRequest = async () => { \r\n\t\r\n\t\ttry {\r\n\t\t\tconst responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\r\n\t\t\t\r\n\t\t\tsetSavedUsers(responseData.users)\r\n\t\t\t\r\n\r\n\t\t} catch (err) {\r\n\t\t//error managed in Http-Hook\r\n\t\t}\r\n\t}\r\n\t  sendingRequest();\r\n\t}, [sendRequest] );\r\n\r\n\tconst handlerError = () => {\r\n\t\tclearError();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment> \r\n\t\t\t<ErrorModal error={error} onClear={handlerError}/> \r\n\t\t\t{isLoading && (<div className='center'>\r\n\t\t\t\t<LoadingSpinner/>\r\n\t\t\t\t</div>)}\r\n\t\t\t\r\n\t\t\t{!isLoading && savedUsers && <UsersList items={savedUsers} /> }\r\n\t\t</React.Fragment>);\r\n};\r\n\r\nexport default Users;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, {useReducer, useEffect} from 'react';\r\nimport './Input.css';\r\n\r\nimport {validate} from '../util/validators';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'CHANGE':\r\n        return {\r\n          ...state \r\n          ,value: action.val ,\r\n          isValid: validate(action.val, action.validators)\r\n        };\r\n      case 'CLICK': {\r\n        return {\r\n            ...state,\r\n            isClicked: true\r\n        }\r\n      }\r\n        default:\r\n        \treturn state;\r\n    }\r\n};\r\n\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value:props.initialValue || \"\",\r\n        isValid: props.initialValid || false,\r\n        isClicked: false\r\n    });\r\n\r\n    const {id, onInput} = props;\r\n    const {value, isValid}=inputState\r\n    useEffect(()=> \r\n        {onInput(id, value, isValid)} \r\n        ,  [id, value, isValid, onInput]  );\r\n\r\n    const changeHandler = event => {\r\n        dispatch ({type: 'CHANGE', val: event.target.value, validators:props.validators});\r\n\r\n    };\r\n\r\n    const clickHandler = () => {\r\n        dispatch({\r\n            type: \"CLICK\"\r\n        });\r\n    };\r\n\r\n    const element = props.element === 'input' ?\r\n     (<input id = {props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} value={inputState.value} onBlur={clickHandler}/> \r\n     \r\n     ): \r\n\r\n     (<textarea id = {props.id} rows={props.rows || 3} onChange={changeHandler} value={inputState.value} onBlur={clickHandler}/>\r\n     );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isClicked && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isClicked && <p>{props.errorText}</p>}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import { useCallback, useReducer} from 'react';\r\n\r\nconst FormularioReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'INPUT_CHANGE':\r\n\t\t\tlet formIsValid = true;\r\n\t\t\tfor (const inputID in state.inputs) {\r\n\t\t\t\tif (!state.inputs[inputID]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (inputID=== action.inputID) {\r\n\t\t\t\t\tformIsValid = formIsValid && action.isValid;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputID].isValid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t...state.inputs,\r\n\t\t\t\t\t\t[action.inputID]: {value:action.value, isValid: action.isValid}\r\n\t\t\t\t\t},\r\n\t\t\t\tisValid: formIsValid\r\n\t\t\t\t};\r\n            case 'DATA_SET':\r\n                return { \r\n                    inputs: action.inputs,\r\n                    isValid: action.formIsValid\r\n                }\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(FormularioReducer, {\r\n\t\tinputs: initialInputs,\r\n\t\tisValid: initialFormValidity\r\n\t} );\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n\t\tdispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputID: id})\r\n\r\n\t}, [dispatch]);\r\n\r\n    const setFormData = useCallback((inputData, formValidity)=>{\r\n        dispatch({\r\n            type: \"DATA_SET\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    } , []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n\r\n};","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false, \r\n    userId: null,\r\n    login: () => {},\r\n    logout: () => {}});","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport './NewPlace.css';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from  '../../shared/components/util/validators';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst NewPlace = () => {\r\n\tconst auth = useContext(AuthContext)\r\n\tconst {isLoading, error, sendRequest,clearError} = useHttpClient();\r\n \tconst [formState, inputHandler] = useForm(\r\n\t\t{\r\n\t\t  title: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t  },\r\n\t\t  description: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t  },\r\n\t\t  address: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t  },\r\n\t\t  busrespect: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t  }\r\n\t\t},\r\n\t\tfalse\r\n\t  );\r\n\r\n\tconst oldhistory= useHistory();\r\n\r\n\tconst placeSubmitHandler = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tawait sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places`, 'POST', JSON.stringify({\r\n\t\t\ttitle: formState.inputs.title.value,\r\n\t\t\tdescription: formState.inputs.description.value,\r\n\t\t\taddress: formState.inputs.address.value,\r\n\t\t\tbusrespect: formState.inputs.busrespect.value,\r\n\t\t\tcreator: auth.userId\r\n\t\t\t//creator\r\n\t\t\t//future busrespect (Add 1 to users karma)\r\n\t\t}),\r\n\t\t{\"Content-Type\": 'application/json'}\r\n\t\t );\r\n\t\toldhistory.push('/');\r\n\t\t} catch (err) { }\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\r\n\t\t<React.Fragment>\r\n\t<ErrorModal error={error} onClear={clearError}/>\r\n\t<form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n\t\t{isLoading &&  <LoadingSpinner asOverlay/> }\r\n\t\t<Input id=\"title\" element = \"input\" label =\"Title\" \r\n\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\terrorText=\"Please enter a valid bus stop name\"\r\n\t\tonInput={inputHandler}/>\r\n\t\t<Input id=\"description\" element = \"textarea\" label =\"Description\" \r\n\t\tvalidators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n\t\terrorText=\"Please enter a valid description for the bus stop (5 characters minimum).\"\r\n\t\tonInput={inputHandler}/>\r\n\t\t<Input id=\"address\" element = \"input\" label =\"Address\" \r\n\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\terrorText=\"Please enter a valid address for the bus stop.\"\r\n\t\tonInput={inputHandler}/>\r\n\t\t<Input id=\"busrespect\" element = \"input\" label =\"Bus stop respected? (True/False)\" \r\n\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\terrorText=\"Please enter a valid answer.\"\r\n\t\tonInput={inputHandler}/>\r\n\r\n\t\t\r\n\t\t<Button type=\"submit\" disabled={!formState.isValid}> ADD BUS STOP  </Button>\r\n\t</form>\r\n\t</React.Fragment>\r\n\t);\r\n\t\r\n};\r\n\r\nexport default NewPlace;","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>;\r\n\r\n};\r\n\r\nexport default MainHeader","import React from 'react';\r\nimport {useContext} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {AuthContext} from '../../context/auth-context';\r\nimport Button from '../FormElements/Button';\r\n\r\nimport './NavLinks.css'\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext)\r\n    return <ul className=\"nav-links\">\r\n    <li>\r\n        <NavLink to=\"/\" exact> ALL USERS </NavLink>\r\n    </li>\r\n    {auth.isLoggedIn && (<li>\r\n        <NavLink to=\"/u1/places\"> MY BUS STOPS </NavLink>\r\n    </li>)}\r\n    {auth.isLoggedIn && ( <li>\r\n        <NavLink to=\"/places/new\"> ADD BUS STOP </NavLink>\r\n    </li>)}\r\n        \r\n    {!auth.isLoggedIn && (  <li>\r\n        <NavLink to=\"/auth\"> AUTHENTICATE </NavLink>\r\n    </li>)}\r\n\r\n    {auth.isLoggedIn && (\r\n        <li>\r\n            <Button onClick={auth.logout}> LOGOUT</Button>\r\n        </li>\r\n    )}\r\n    </ul>\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawer = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">BajaBaja</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n\r\n","import React from 'react';\r\nimport { useRef , useEffect } from 'react';\r\n\r\nimport './Map.css'\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const {center, zoom} = props;\r\n\r\n    useEffect( () => { const map = new window.google.maps.Map(mapRef.current, {\r\n        center: center,\r\n        zoom: zoom\r\n    }\r\n        );\r\n\r\n    new window.google.maps.Marker({position: center, map: map});}, [center,zoom]);\r\n\r\n    return <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>;\r\n    \r\n};\r\n\r\nexport default Map;","\r\nimport React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\n\r\nimport {AuthContext} from '../../shared//context/auth-context'\r\nimport \"./PlaceItem.css\";\r\n\r\n\r\nconst PlaceItem = props => {\r\n    const auth = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n      };\r\n    \r\n      const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n      };\r\n    \r\n      const confirmDeleteHandler = () => {\r\n        setShowConfirmModal(false); //when clicked close the new Modal \r\n        console.log('DELETING...');\r\n      };\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <Modal show={showMap} \r\n            onCancel={closeMapHandler} \r\n            header={props.address}\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={<Button onClick={closeMapHandler}>Close </Button>}\r\n            >\r\n            <div className='map-container'>\r\n                <Map center={props.coordinates} zoom={16}/>  {/* Should be props.coordinates but we writing default data for now until geocoding solved. */}\r\n            </div>\r\n        </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you entirely sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n        <li className='\"place=item'> \r\n            <Card className=\"place-item__content\">\r\n                <div className='place-item__image'>\r\n                    <img \r\n                     src={props.image}\r\n                     alt={props.title}/>\r\n                </div>\r\n                <div className='place-item__info'>\r\n                    <h2>{props.title}</h2>\r\n                    <h3>{props.address}</h3>\r\n                    <p>{props.description}</p>\r\n                </div>\r\n                <div className='place-item__actions'>\r\n                    <Button inverse onClick={openMapHandler}> VIEW ON MAP</Button>\r\n                   {auth.isLoggedIn && (<Button to={`/places/${props.id}`}> EDIT</Button> )}\r\n                  {auth.isLoggedIn &&<Button danger onClick={showDeleteWarningHandler}> DELETE </Button>}\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\nimport \"./PlaceList.css\"\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nconst PlaceList = props => {\r\n\tif (props.items.length === 0) {\r\n        return (\r\n            <div className='place-list-center'>\r\n                 <Card>\r\n                <h2>No bus stops available. Be the first one to create one!</h2>\r\n                <Button to='/places/new'> Create Bus Stop </Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n    return <ul className=\"place-list\">\r\n        {props.items.map(bus_stops=> <PlaceItem key={bus_stops.id} id={bus_stops.id}  title={bus_stops.title} description={bus_stops.description} address={bus_stops.address} creatorId= {bus_stops.creator} busrespect={bus_stops.busrespect} coordinates={bus_stops.location} image={bus_stops.image}/>)} {/* //Will be added soon: //coordinates={place.location} image={place.imageUrl}/>)} */}\r\n    </ul>;\r\n};\r\n\r\nexport default PlaceList;","\r\nimport React, {useState, useEffect } from 'react';\r\nimport PlaceList from '../components/PlaceList';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const {isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const userId = useParams().userId;\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n            );\r\n            console.log(responseData.bus_stops)\r\n            setLoadedPlaces(responseData.bus_stops);\r\n          } catch (err) {}\r\n          \r\n        };\r\n        fetchPlaces();\r\n      }, [sendRequest, userId]);\r\n\r\n\r\n\treturn (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError}/>\r\n    {isLoading && (<div className='center'>\r\n        <LoadingSpinner/>\r\n        </div> )}\r\n        {loadedPlaces && !isLoading && <PlaceList items={loadedPlaces} /> }\r\n    ;\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;","import React from 'react';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\r\nimport './NewPlace.css'; //same for CSS stye for this update form to the New Bus Stop file\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport {useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { AuthContext} from '../../shared/context/auth-context';\r\n\r\n\r\n const EditPlace = () => {\r\n\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedPlaces, setLoadedPlaces] = useState()\r\n    \r\n    const auth = useContext(AuthContext);\r\n    const placeId= useParams().placeId;\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n    \r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlaces(responseData.bus_stop);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.bus_stop.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.bus_stop.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n      \r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n   \r\n    \r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n          await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, 'PATCH', \r\n        JSON.stringify({\r\n          title: formState.inputs.title.value, \r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n        );\r\n        history.push('/' + auth.userId +'/places');\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className='center'>\r\n               <LoadingSpinner/>\r\n            </div>\r\n        );\r\n     }\r\n    \r\n\r\n    if (!loadedPlaces && !error ) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n        <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n         );\r\n     }\r\n\r\n     \r\n\r\n     return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n       {!isLoading && loadedPlaces && (  \r\n       <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"The title is not valid. Try again.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlaces.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"The minimum amount of characters allowed: 5. Please try again. \"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlaces.description}\r\n            initialValid={true}\r\n          />E\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Edit Bus Stop\r\n          </Button>\r\n        </form>)}\r\n        </React.Fragment>\r\n      );\r\n    };\r\n    \r\n    export default EditPlace;\r\n","import React, { useContext } from 'react';\r\nimport {useState} from 'react';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/components/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport './Auth.css';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode]=useState(true);\r\n   \r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n   \r\n    const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n        setFormData({\r\n            ...formState.inputs,\r\n            name: undefined\r\n        }, formState.inputs.email.isValid && formState.inputs.password.isValid);\r\n    } else {\r\n        setFormData({\r\n            ...formState.inputs,\r\n            name: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n\r\n        }, false);\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode)\r\n  }\r\n\r\n  const authSubmitHandler = async event => {  //Allow to see inputs in console\r\n    event.preventDefault();\r\n  \r\n    if (!isLoginMode) { \r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          JSON.stringify({\r\n            name1: formState.inputs.name.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n\r\n        auth.login(responseData.user.id);\r\n      } catch (err) {}\r\n    } else {\r\n        try { const responseData =await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n        'POST', \r\n        JSON.stringify({\r\n          email: formState.inputs.email.value, \r\n          password: formState.inputs.password.value}),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        );\r\n  auth.login(responseData.user.id);\r\n} catch (err) {    }\r\n  }\r\n  };\r\n\r\n  const handlerError = () => {\r\n    clearError();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={handlerError}/>\r\n    <Card className=\"authentication\">\r\n      {isLoading &&<LoadingSpinner asOverlay={true}/>}\r\n      <h2>Login Required</h2>\r\n\r\n      <hr/>\r\n\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode \r\n        && (\r\n        <Input\r\n            element=\"input\" id=\"name\"\r\n            type=\"text\" label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]} errorText=\"Add a name.\"\r\n            onInput={inputHandler} />\r\n        )}\r\n\r\n        <Input element=\"input\"\r\n          id=\"email\" type=\"email\"\r\n          label=\"E-Mail\" validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Input\r\n          element=\"input\" id=\"password\"\r\n          type=\"password\" label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid password, at least 5 characters.\"\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form> \r\n      <Button inverse onClick={switchModeHandler}> No account? {isLoginMode ? 'SIGNUP' : 'LOGIN'} </Button>\r\n    </Card>\r\n    </React.Fragment>);};\r\n\r\nexport default Auth;\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\n\r\nimport {useCallback, useState} from 'react';\r\n\r\nimport Users from './user/pages/Users';\r\nimport NewPlace from './places/pages/NewPlace'\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport UserPlaces from './places/pages/UserPlaces';\r\nimport EditPlace from './places/pages/EditPlace';\r\nimport Auth from './user/pages/Auth.js';\r\nimport {AuthContext} from './shared/context/auth-context';\r\nconst App = () => { \r\n  const [userId, setUserId] = useState(false)\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n\r\n\tconst logout = useCallback(() => {\r\n\t\tsetIsLoggedIn(false);\r\n    setUserId(null);\r\n\t}, []);\r\n\r\n\tconst login = useCallback((uid) => {\r\n\t\tsetIsLoggedIn(true);\r\n    setUserId(uid);\r\n\t}, []);\r\n\r\n\tlet routes;\r\n\r\n  if (isLoggedIn) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <EditPlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\treturn (\r\n\t<AuthContext.Provider value = {{isLoggedIn: isLoggedIn, login:login, logout:logout, userId}}>\r\n\t <Router>\r\n\t  <MainNavigation />\r\n\t  <main>\r\n\t  {routes}\r\n\t   </main>\r\n\t </Router>\r\n\t </AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}