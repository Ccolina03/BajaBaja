{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawer","Fragment","Users","React","lazy","NewPlace","UserPlaces","EditPlace","Auth","App","routes","setUserId","setIsLoggedIn","useCallback","uid","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.39e4dbbd.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n    isLoggedIn: false, \n    userId: null,\n    login: () => {},\n    logout: () => {}});","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">\n        {props.children}\n    </header>;\n\n};\n\nexport default MainHeader","import React from 'react';\nimport {useContext} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport {AuthContext} from '../../context/auth-context';\nimport Button from '../FormElements/Button';\n\nimport './NavLinks.css'\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext)\n    return <ul className=\"nav-links\">\n    <li>\n        <NavLink to=\"/\" exact> ALL USERS </NavLink>\n    </li>\n    {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY BUS STOPS</NavLink>\n        </li>\n      )}\n    {auth.isLoggedIn && ( <li>\n        <NavLink to=\"/places/new\"> ADD BUS STOP </NavLink>\n    </li>)}\n        \n    {!auth.isLoggedIn && (  <li>\n        <NavLink to=\"/auth\"> AUTHENTICATE </NavLink>\n    </li>)}\n\n    {auth.isLoggedIn && (\n        <li>\n            <Button onClick={auth.logout}> LOGOUT</Button>\n        </li>\n    )}\n    </ul>\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">BajaBaja</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n\n","import React, {Suspense} from 'react'\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\n\nimport {useCallback, useState} from 'react';\n\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\n//import Users from './user/pages/Users';\n//import NewPlace from './places/pages/NewPlace'\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n//import UserPlaces from './places/pages/UserPlaces';\n//import EditPlace from './places/pages/EditPlace';\n//import Auth from './user/pages/Auth.js';\nimport {AuthContext} from './shared/context/auth-context';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace=React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces=React.lazy(() => import('./places/pages/UserPlaces'));\nconst EditPlace=React.lazy(() => import('./places/pages/EditPlace'));\nconst Auth=React.lazy(() => import('./user/pages/Auth.js'));\n\nconst App = () => { \n  const [userId, setUserId] = useState(false)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n\n\tconst logout = useCallback(() => {\n\t\tsetIsLoggedIn(false);\n    setUserId(null);\n\t}, []);\n\n\tconst login = useCallback((uid) => {\n\t\tsetIsLoggedIn(true);\n    setUserId(uid);\n\t}, []);\n\n\tlet routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <EditPlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\treturn (\n\t<AuthContext.Provider value = {{isLoggedIn: isLoggedIn, login:login, logout:logout, userId}}>\n\t <Router>\n\t  <MainNavigation />\n\t  <main> \n      <Suspense fallback={<div className='center'><LoadingSpinner/></div>}>\n\t  {routes}\n    </Suspense>\n\t   </main>\n\t </Router>\n\t </AuthContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}